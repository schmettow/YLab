---
title: "YLab in a nutshell"
author: "Martin Schmettow"
format: html
editor: visual
---

## 

# NEWS


## Coming up next

YLab1 is in development, while YLab0 is on teh finishing line.
YLab1 builds on the same interaction model as YLab0, but it adds
two important features:

-  collecting analog EMA signals via the high-resolution ADS1115 bridge.


## Close to the first release

YLab is an object-imperative framework to build low-budget smart sensors for collecting physiological signals. 
Currently, YLab has the following features:

-   analog sensors

-   event markers

-   sensor arrays with individually adjustable sample rate

-   basic UI elements, such as LEDs and buttons

-   data storage on SD card

YLab comes with one or more example useful example applications.
The present version is in apps/ylab1.py and can be used with one analog EDA or EMG/ECG sensor.

YLab 1 features:

-   a simple, but clean user interface

-   one analog signal

-   collecting marker events using two buttons

-   data storage

-   Plotter-friendly output on the serial line


# Getting started with YLab

## Pre-requisites

1.  Download YLab0.zip and unpack it
2.  Connect the Maker Pi and wait until the drive window connects
3.  Copy the YLab folder apps to the drive
4.  Copy the content of YLab folder lib to the folder /lib on the drive
5.  Insert a freshly FAT32 formatted SD card into the slot on the Pico
6.  Connect the Grove GSR kit to port 6
7.  Download and install Thonny

## Operating YLab


1.  Run Thonny and open Run: Select Interpreter
10. Select CircuitPython and connect to the serial port
11. Load apps/ylab_0.py into Thonny
12. Activate View: Plotter in Thonny
13. Hit the Run button


When the program starts, it is in Stop mode (White). Clicking button GP20 enters Pause mode (Green), where the program samples the sensor and print results it to the screen. You should see numbers printed to the Thonny console and a moving graph in Plotter. 

Clicking the button again activates Record mode (Red), where the sampled data is collected and regularly transferred from the sensor to a file on the SD card. You should see the leds GP10 - GP13 flicker every second

From here on Shortlong 20 toggles between Record and pause mode. A long press on the button enters Stop mode (White).
In Stop mode a long press ends YLab0

The results of recordings are stored as a file ylab_seconds.csv on the SDcard. To use it, remove the SDcard and put it into a slot on your computer (you may need a microSD adaptor). The CSV files can be opened with any data analysis system.

The data is stored in the YLab very long format, where every atomic measure occupies one row, together with a time stamp and the sensor ID.

You can also use YLab on-the-go. Copy apps/ylab_0.py to /CIRCUITPY and rename the file to code.py. That makes it run every time the system is powered up, also when not connected to a computer. Connect the Ylab system to a USB powerbank and start recording.



